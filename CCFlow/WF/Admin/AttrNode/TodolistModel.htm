<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>マルチプレイヤールール</title>
    <meta charset="UTF-8" />
    <link href="../../Scripts/easyUI145/themes/color.css" rel="stylesheet" />
    <link href="../../Scripts/easyUI145/themes/default/easyui.css" rel="stylesheet" type="text/css" />
    <script language="JavaScript" src="../../Comm/JScript.js" type="text/javascript"></script>
    <script type="text/javascript" src="../../Scripts/bootstrap/js/jquery.min.js"></script>
    <script src="../../Scripts/QueryString.js" type="text/javascript"></script>
    <link href="../../../DataUser/Style/ccbpm.css" rel="stylesheet" type="text/css" />
    <!-- 引用通用的js文件. -->
    <script type="text/javascript" src="../../Scripts/config.js"></script>
    <script type="text/javascript" src="../../Comm/Gener.js"></script>
    <script src="../Admin.js"></script>
    <script type="text/javascript" language="javascript">
        //页面启动函数.
        $(function () {

            $("#Msg").html("読み込み中です。しばらくお待ちください......");

            //初始化groupID.
            var nodeID = GetQueryString("FK_Node");
            var btnLab = new Entity("BP.WF.Template.BtnLab", nodeID);

            if (btnLab.HuiQianRole != 0) {

                $("#Msg").html("<font color=red >現在は署名モードですので、複数人の処理ルールを設定することはできません。</font>");
                document.getElementById("Btn_Save").disabled = true;
                return;
            }

            var node = new Entity("BP.WF.Node", nodeID);

            //调用公共类库的方法:执行批量主表赋值
            GenerFullAllCtrlsVal(node);

            $("#Msg").html("");

        });

        function Help() {
            var url = "http://ccbpm.mydoc.io";
            window.open(url);
        }
    </script>
</head>
<body>
    <form id="cc">
        <div id="Msg">
        </div>
        <div id="bar" class="cs-tr cs-bar">
            <input type="button" id="Btn_Save" value="保存" onclick="Save()" />
            <input type="button" value="助けがほしい" onclick="Help()" />
        </div>
        <fieldset>
            <legend>
                <input type="radio" value="0" id="RB_TodolistModel_0" name="RB_TodolistModel" />
                <label for="RB_TodolistModel_0">
                    即時モード
                </label>
            </legend>
            <ul>
                <li style="color: Gray">AからBに送信して、Bノードにn人が処理できます。このn人は処理待ちが見られますが、一人で処理すると他の人の処理待ちがなくなります。</li>
                <li style="color: Gray">この種の作業モードはプリエンプティブ処理に属します。これらのn人は同時に開くことができます。1人が送信すると、他の人は送信できなくなります。</li>
                <li style="color: Gray">簡単に言えば、先取った者の勝ちです。</li>
                <li style="color: Gray">即時モードはデフォルトの処理モードです。</li>
            </ul>
        </fieldset>
        <fieldset>
            <legend>
                <input type="radio" value="1" id="RB_TodolistModel_1" name="RB_TodolistModel" />
                <label for="RB_TodolistModel_1">
                    協力モード
                </label>
            </legend>
            <ul style="color: Gray">
                <li>AからBに送信して、Bノードにn人が処理できます。この人達はすべて処理に行くことができて、すべて送信することができて、n人中最後の処理人が次のノードに遷移します。処理順序を区別しません。このようなモードは協力モードと言います。</li>
                <li>協力モードは通常、審査コンポーネントがあるフォームで使用されています。一人一人が自分の意見を記入し、自分の意見を発表します。審査コンポーネントの中で一人一人が一つのノードにデータだけを書き込むことができます。つまり、一回のコメントをしか提出できません。</li>
                <li>回覧の場合にもよく使われていますが、この人たちは全部読み取って、読んだら次へ遷移できます。CCとは違って、CCは見なくても次のノードに遷移できます。回覧では処理しないと次のノードに遷移できません。</li>
                <li>通常の協力モードとは、多くの人が送信ボタンをクリックして、自分が処理したことを確認し、自分が同意したことや承認したことを確認することです。</li>
            </ul>
        </fieldset>
        <fieldset>
            <legend>
                <input type="radio" value="2" id="RB_TodolistModel_2" name="RB_TodolistModel" />
                <label for="RB_TodolistModel_2">
                    キューモード
                </label>
            </legend>
            <ul style="color: Gray">
                <li>AからBに送信して、Bノードにn人が処理できます。このn人は設定された先着順に処理します。同じ時点で一人が処理待ちしていなければなりません。他の人は見えません。</li>
                <li>アプリケーションシナリオ：一つの公文書を一つの部門に送ります。この部門は下のn人が受け入れることができます（注意：部門はノードの一つ）。国内の行政制度によって、このn人はポストの上下から一つの列に着きます。一番小さい等級の職員が承認して、順番に類推して、最後の一人から次のノードに送ります。このn個人はいずれもノードの処理者であり、このn個人の審査手順は彼らの順序で決定されるので、ノードの受信者を設ける際には、順番に実行される。</li>
                <li>通常はこのようなパターンも審査コンポーネントと一緒に使用され、一人一人が順番に意見を表明した後、次のノードに送信されます。</li>
                <li>返却する時、一番目の人が戻ってくるのは前のノードです。他の人は順番に戻ってきます。</li>
            </ul>
        </fieldset>
        <fieldset>
            <legend>
                <input type="radio" value="3" id="RB_TodolistModel_3" name="RB_TodolistModel" />
                <label for="RB_TodolistModel_3">
                    共有モード
                </label>
            </legend>
            <ul style="color: Gray">
                <li>AからBに送信すると。Bノードにn人が処理できます。ccbpmはこのタスクをタスクプールに入れます。このn人は全部見られます。</li>
                <li>その中の一人がこの仕事を処理するには、タスクプールから取り出して自分の処理待ちに入れる必要があります。彼が取り出した後、他の人は見えなくなりました。</li>
                <li>この人がこの仕事を処理したくないなら、彼はまたこの仕事をタスクプールに戻させることができます。他の人はまた申請できます。</li>
                <li>詳細はマニュアルを参照してください。</li>
            </ul>
        </fieldset>
        <fieldset>
            <legend>
                <input type="radio" value="4" id="RB_TodolistModel_4" name="RB_TodolistModel" />
                <label for="RB_TodolistModel_4">
                    組長協力モード
                </label>
            </legend>
            <ul style="color: Gray">
                <li>このモードは協力モードと違って、もし現在の人員の中に組長（リーダー）がいれば、彼は送信を実行する時にこのフローを終了します。</li>
                <li>このモードは次の3つの場合があります：</li>
                <li>第一種類：受信者リストにリーダー/組長がいません。このモードは協力モードと同じです。すべてのメンバーが態度を表明してから下に送ることができます。</li>
                <li>第二種類：リーダー/組長が一人しかいない場合、リーダー/組長が下に送信する時、ノードが完了したと表示します。例えば、現在のノードはサンプリングノードであり、サンプルグループは組長n個の組員がいます。組長が下に送る時だけ、この作業が完了したとマークします。</li>
                <li>第三種類：n個のリーダー/組長がいる場合、n>=1任意のリーダー/組長が下に発送する時、このフローが完了したとマークします。例えば、現在ノードのサンプリングタスクは二つのサンプルグループに任せています。二つのチーム長n人のメンバーがいます。いずれかのチーム長は下に送信して、この作業が終了したとマークしています。</li>
                <li>
                    グループリーダーによる確認：<select name="DDL_TeamLeaderConfirmRole" id="DDL_TeamLeaderConfirmRole">
                        <option value="0">Port_DeptのLeaderフィールドによる、処理者の集合の組長を決定する。</option>
                        <option value="1">SQL文の実行結果による、受信者集合の組長を決定します。</option>
                        <option value="2">連署ノードのモデレーターモード。</option>
                    </select>
                </li>
                <li>
                    コンテンツ（SQLの入力のみ有効）
<input type="text" id="TB_TeamLeaderConfirmDoc" name="TB_TeamLeaderConfirmDoc" />
                </li>
            </ul>
        </fieldset>


        <script type="text/javascript">

            function Save() {

                var nodeID = GetQueryString("FK_Node");

                var node = new Entity("BP.WF.Node");
                node.SetPKVal(nodeID);
                node.Retrieve();

                node.TodolistModel = $('input:radio[name="RB_TodolistModel"]:checked').val();
                node.TeamLeaderConfirmRole = $("#DDL_TeamLeaderConfirmRole").val();
                node.TeamLeaderConfirmDoc = $("#TB_TeamLeaderConfirmDoc").val();
                node.Update();

                window.location.href = window.location.href;
                return;
            }
        </script>
    </form>
</body>
</html>